@model MessageParser.Models.ElectiveList

@{
    ViewBag.Title = "Edit";
}

<div class="contentbox">
    <div class="liquid_100">
                <h2>Edit Elective List: @Html.DisplayFor(model => model.electiveListName)</h2>
@using (Html.BeginForm("Edit", "ElectiveLists", FormMethod.Post, new {@id = "editform"})) {
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.ID)
    <fieldset>
        <legend>Basic Elective List Information</legend>
        <ol>
            <li>
                @Html.LabelFor(model => model.electiveListName)
                @Html.EditorFor(model => model.electiveListName)
                @Html.ValidationMessageFor(model => model.electiveListName)
            </li>
            <li>
                @Html.LabelFor(model => model.shortName)
                @Html.EditorFor(model => model.shortName)
                @Html.ValidationMessageFor(model => model.shortName)
            </li>
        </ol>
    </fieldset>
    <fieldset>
        <legend><h2>Available Courses</h2></legend>
        <div id="electivelistcourses" data-electivelistid="@Model.ID">
            @if(Model.courses != null){
                foreach(MessageParser.Models.ElectiveListCourse item in Model.courses){
                    @Html.Partial("ElectiveListCourseFormPartial", item);
                }
            }
        </div>
        <a id="addElectiveListCourse" href="#">Add a Course</a>
    </fieldset>
    <hr />
        <p>
            <input type="submit" value="Save" />
        </p>
}
        <p>
            @Html.ActionLink("Back to Elective Lists", "Index")
        </p>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/site")
}
